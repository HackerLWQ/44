Scale Invariant Feature Transform(SIFT) 平移不变性图像特征匹配算法
2004
1.图像尺度空间：考虑图像在不同尺度下都存在的特点，而不随图像尺寸改变而改变
①高斯模糊：对图像进行 高斯滤波（模糊化）sigma越大，图像越模糊
②多分辨率金字塔 创建
③高斯差分金字塔(DOG)：多分辨率金字塔同一层 相邻两两进行差分计算（得到n-1差分结果）-》找到特征点（即差分较大的）
④DoG 空间极值检测
每个点要和三维 26个点进行比较
④关键点的精准定位：对④中得到的极值点进行 曲线拟合（泰勒展开），再计算曲线极值点
⑤消除边界响应：剔除主曲率比值大于10的特征点
⑥特征点的主方向
⑦基于关键点 生成特征描述：在完成关键点的梯度计算后，使用直方图统计领域内像素的梯度和方向
为了保证特征矢量的旋转不变性，要以特征点为中心，在附近领域内将坐标轴旋转某个角度，即坐标轴旋转为特征点的主方向

代码：需用老版本   cv2._version_3.4.1.15
灰度图
sift=cv2.xfeatures2d.SIFT_create()        ****************或者用 sift = cv2.SIFT_create() 来代替
kp=sift.detect(gray,None)

kp,des=sift.compute(gray,kp)   #des 特征向量


二、实战：特征匹配--用于拼接、全景图像
1.Brute-Force蛮力匹配
代码
sift=cv2.xfeatures2d.SIFT_create()
kp1,des1=sift.detectAndCompute(img1,None)
kp2,des2=sift.detectAndCompute(img2,None)  #一步到位：检测特征点+特征向量
#crossCheck 交叉检查 归一化数组的欧几里得距离
bf=cv2.BFMatcher(crossCheck=True)

---1对1的匹配
matches=bf.match(des1,des2)
matches=sorted(matches,key=lambda x:x.distance)
img3=cv2.drawMatches(img1,kp1,img2,kp2,matches[:10],None,flags=2)
---k对最佳匹配
bf=cv2.BFMatcher()
matches=bf.knnMatch(des1,des2,k=2)
good=[]
for m,n in matches:
    if m.distance<0.75*n.distance:
        good.append([m])
img3=cv2.drawMatchesKnn(img1,kp1,img2,kp2,good,None,flags=2)

2.随机抽样一致算法RANSAC（Random sample consensus） vs 最小二乘法拟合
给出一个容忍曲线范围，不断迭代，直到找出数据点最多情况
作用理解：
    在特征匹配中，一旦找到了特征点，接下来的任务是确定这些特征点对应的几何变换关系，以便将不同图像中的特征点对应起来。这就涉及到了特征点的匹配和对应关系的确定，而随机抽样一致算法（RANSAC）在这一过程中起到了关键的作用。

    特征点匹配可能会受到噪声、误匹配和局部几何变换等因素的影响，导致一些错误的匹配。RANSAC算法可以用来剔除这些错误匹配，从而得到更准确的特征点对应关系，最终用于估计两幅图像之间的几何变换关系。

    具体来说，RANSAC在特征匹配中的作用如下：

    剔除错误匹配： 利用RANSAC算法，可以从特征点匹配中随机选择一个小的子集（内点），然后通过估计几何变换，判断其他特征点是否在这个变换下与内点对应。如果一个特征点与估计的几何变换下的内点距离较小，则将其视为内点，否则将其视为外点（错误匹配）。通过不断迭代，RANSAC可以筛选出正确的内点，剔除错误的外点，从而得到更可靠的特征点对应关系。

    估计几何变换： RANSAC可以用于估计不同图像间的几何变换关系，如单应性变换（Homography）用于透视变换、仿射变换等。在每次迭代中，RANSAC会随机选择一组特征点，然后根据这些点估计几何变换参数。通过对内点的投票，RANSAC能找到最适合的几何变换模型。

    提高匹配的鲁棒性： 特征点匹配在存在噪声、变形、遮挡等情况下容易出错。RANSAC通过随机采样和内点检验的策略，可以提高匹配的鲁棒性，保证最终得到的匹配结果更加准确和可靠。

    总之，RANSAC算法在特征匹配中的作用是剔除错误匹配，估计几何变换，并提高匹配的鲁棒性，从而使得特征点匹配结果更加可信，为后续的图像配准、目标追踪、三维重建等任务提供了基础。

3.图像拼接方法 TIP：对图像进行拼接、投影、角度变换、透视变换时最少需要四个点，且三点不共线
单应性矩阵

流程梳理：
1.找到 两图 特征点和特征向量SIFT
2.进行特征点匹配 Brute-Force蛮力匹配
3.剔除一些噪声点，进行曲线拟合 RANSAC
4.计算H矩阵（单应性矩阵） 进行图像变换